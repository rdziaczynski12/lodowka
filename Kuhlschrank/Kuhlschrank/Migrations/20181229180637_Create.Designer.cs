// <auto-generated />
using System;
using Kuhlschrank.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kuhlschrank.Migrations
{
    [DbContext(typeof(KuhlschrankContext))]
    [Migration("20181229180637_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kuhlschrank.Models.Client", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired();

                    b.Property<string>("code")
                        .IsRequired();

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("firstName")
                        .IsRequired();

                    b.Property<string>("lastName")
                        .IsRequired();

                    b.Property<string>("login")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("phoneNumber");

                    b.Property<string>("place")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Kuhlschrank.Models.ClientFridge", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("clientid");

                    b.Property<long>("fridgeid");

                    b.HasKey("id");

                    b.HasIndex("clientid");

                    b.HasIndex("fridgeid");

                    b.ToTable("ClientFridge");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Fridge", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activated");

                    b.Property<string>("serialNumber")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<float>("temperature");

                    b.HasKey("id");

                    b.ToTable("Fridge");
                });

            modelBuilder.Entity("Kuhlschrank.Models.FridgeProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("buyDate");

                    b.Property<DateTime>("expirationDate");

                    b.Property<long>("fridgeid");

                    b.Property<long>("productid");

                    b.Property<double>("quantity");

                    b.HasKey("id");

                    b.HasIndex("fridgeid");

                    b.HasIndex("productid");

                    b.ToTable("FridgeProduct");
                });

            modelBuilder.Entity("Kuhlschrank.Models.HistoryProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("clientid");

                    b.Property<DateTime>("date");

                    b.Property<long>("productid");

                    b.HasKey("id");

                    b.HasIndex("clientid");

                    b.HasIndex("productid");

                    b.ToTable("HistoryProduct");
                });

            modelBuilder.Entity("Kuhlschrank.Models.HistoryRecipe", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("clientid");

                    b.Property<DateTime>("date");

                    b.Property<long>("recipeid");

                    b.HasKey("id");

                    b.HasIndex("clientid");

                    b.HasIndex("recipeid");

                    b.ToTable("HistoryRecipe");
                });

            modelBuilder.Entity("Kuhlschrank.Models.OpenProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OpenDate");

                    b.Property<DateTime>("expirationDate");

                    b.Property<long>("fridgeid");

                    b.Property<long>("productid");

                    b.Property<double>("quantity");

                    b.Property<bool>("returned");

                    b.HasKey("id");

                    b.HasIndex("fridgeid");

                    b.HasIndex("productid");

                    b.ToTable("OpenProduct");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Order", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("clientid");

                    b.Property<DateTime>("date");

                    b.Property<long>("fridgeid");

                    b.Property<string>("status");

                    b.Property<long>("supplyid");

                    b.HasKey("id");

                    b.HasIndex("clientid");

                    b.HasIndex("fridgeid");

                    b.HasIndex("supplyid");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Kuhlschrank.Models.OrderProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("orderid");

                    b.Property<long>("productid");

                    b.Property<double>("quantity");

                    b.HasKey("id");

                    b.HasIndex("orderid");

                    b.HasIndex("productid");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Producer", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NIP")
                        .IsRequired();

                    b.Property<string>("address")
                        .IsRequired();

                    b.Property<string>("code")
                        .IsRequired();

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("place")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .IsRequired();

                    b.Property<string>("expirationDateOpen");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<decimal>("price");

                    b.Property<long>("producerid");

                    b.Property<string>("type");

                    b.Property<string>("unit");

                    b.Property<string>("unitOne");

                    b.HasKey("id");

                    b.HasIndex("producerid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Recipe", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int>("difficulty");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<int>("portions");

                    b.Property<double>("time");

                    b.Property<string>("type");

                    b.Property<bool>("vegetarian");

                    b.HasKey("id");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Kuhlschrank.Models.RecipeProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("productid");

                    b.Property<double>("quantity");

                    b.Property<long>("recipeid");

                    b.HasKey("id");

                    b.HasIndex("productid");

                    b.HasIndex("recipeid");

                    b.ToTable("RecipeProduct");
                });

            modelBuilder.Entity("Kuhlschrank.Models.Supply", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.Property<decimal>("price");

                    b.Property<int>("time");

                    b.HasKey("id");

                    b.ToTable("Supply");
                });

            modelBuilder.Entity("Kuhlschrank.Models.ClientFridge", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Client", "client")
                        .WithMany("fridges")
                        .HasForeignKey("clientid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Fridge", "fridge")
                        .WithMany("clients")
                        .HasForeignKey("fridgeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.FridgeProduct", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Fridge", "fridge")
                        .WithMany("products")
                        .HasForeignKey("fridgeid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Product", "product")
                        .WithMany("fridges")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.HistoryProduct", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Client", "client")
                        .WithMany("historyProducts")
                        .HasForeignKey("clientid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Product", "product")
                        .WithMany("historyProducts")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.HistoryRecipe", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Client", "client")
                        .WithMany("historyRecipes")
                        .HasForeignKey("clientid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Recipe", "recipe")
                        .WithMany("recipeHistory")
                        .HasForeignKey("recipeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.OpenProduct", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Fridge", "fridge")
                        .WithMany("openProducts")
                        .HasForeignKey("fridgeid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Product", "product")
                        .WithMany("openProducts")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.Order", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Client", "client")
                        .WithMany("orders")
                        .HasForeignKey("clientid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Fridge", "fridge")
                        .WithMany("orders")
                        .HasForeignKey("fridgeid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Supply", "supply")
                        .WithMany("orders")
                        .HasForeignKey("supplyid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.OrderProduct", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Order", "order")
                        .WithMany("products")
                        .HasForeignKey("orderid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Product", "product")
                        .WithMany("orders")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.Product", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Producer", "producer")
                        .WithMany("products")
                        .HasForeignKey("producerid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kuhlschrank.Models.RecipeProduct", b =>
                {
                    b.HasOne("Kuhlschrank.Models.Product", "product")
                        .WithMany("recipes")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kuhlschrank.Models.Recipe", "recipe")
                        .WithMany("products")
                        .HasForeignKey("recipeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
